name: Deploy SpringIdle-API to AWS
on: [push]
env:
  BUCKET_NAME : ${{ secrets.S3_BUCKET }}
  AWS_REGION : ${{ secrets.S3_BUCKET_REGION }}
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout
jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Build
        run: |
             pip install -r requirements.txt --target ./tmp_package --platform manylinux2014_x86_64 --only-binary=:all:
             cd ./tmp_package
             zip -r9 ../dependencies.zip .
             cd ..
             rm -rf tmp_package/
             echo "SECRET_KEY = \"${{secrets.APP_SECRET_KEY}}\"" > app_secrets.py
             echo "ALGORITHM = \"${{secrets.APP_ALGORITHM}}\"" >> app_secrets.py
             echo "ACCESS_TOKEN_EXPIRE_MINUTES = \"${{secrets.APP_ACCESS_TOKEN_EXPIRE_MINUTES}}\"" >> app_secrets.py
             zip -g ./function.zip -r app
             zip -g ./function.zip lambda_function.py app_secrets.py
             rm app_secrets.py
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ID }}:role/GitHub-OIDC-provider-Role-rU9qoKq6fUVb
          role-session-name: samplerolesession
          aws-region: ${{ env.AWS_REGION }}
          audience: sts.amazonaws.com
      # Upload a file to AWS s3
      - name:  Deploy to S3 bucket
        run: |
          aws s3 cp ./function.zip s3://${{ env.BUCKET_NAME }}/
          aws s3 cp ./dependencies.zip s3://${{ env.BUCKET_NAME }}/
      - name:  Deploy to Lambda
        run: |
          aws lambda update-function-code --function-name SpringIdle-API --s3-bucket ${{ env.BUCKET_NAME }} --s3-key function.zip
          aws lambda publish-layer-version --layer-name python-dependencies-layer \
            --s3-bucket ${{ env.BUCKET_NAME }} --s3-key dependencies.zip \
            --compatible-runtimes python3.12 \
            --compatible-architectures "x86_64"